{"version":3,"file":"static/js/36.686886b9.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/FormValidation/PostFormSchema.js","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__PtLF9\",\"myContacts\":\"ProfileInfo_myContacts__4vNnv\",\"aboutMe\":\"ProfileInfo_aboutMe__Qb9CA\",\"aboutMeHead\":\"ProfileInfo_aboutMeHead__rxpbu\",\"fullName\":\"ProfileInfo_fullName__6OJ0y\",\"unLoginImg\":\"ProfileInfo_unLoginImg__q3Gwe\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >\r\n                        {props.status || 'Status'}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport { NavLink } from 'react-router-dom'\r\nimport loginIMG from '../../../assets/images/unknownUser.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://c4.wallpaperflare.com/wallpaper/842/306/567/cool-pictures-of-mountains-1920x1080-wallpaper-preview.jpg' alt=\"\" />\r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                {!profile.photos.large \r\n                ? <img className={classes.unLoginImg} alt=\"\" src={loginIMG} />\r\n                : <img alt=\"\" src={profile.photos.large} />}\r\n                <div className={classes.fullName}>\r\n                    {profile.fullName}\r\n                </div>\r\n                {profile.aboutMe && (\r\n                    <div className={classes.aboutMe}>\r\n                        <div className={classes.aboutMeHead} >\r\n                        About Me\r\n                        </div>\r\n                        {profile.aboutMe}\r\n                    </div>\r\n                )}\r\n                <div className={classes.myContacts}>\r\n                    {Object.values(profile.contacts).some(contact => contact) && (\r\n                        <>\r\n                            My Contacts\r\n                            {profile.contacts.facebook && (\r\n                                <NavLink to={profile.contacts.facebook}>facebook</NavLink>\r\n                            )}\r\n                            {profile.contacts.website && (\r\n                                <NavLink to={profile.contacts.website}>website</NavLink>\r\n                            )}\r\n                            {profile.contacts.vk && (\r\n                                <NavLink to={profile.contacts.vk}>vk</NavLink>\r\n                            )}\r\n                            {profile.contacts.twitter && (\r\n                                <NavLink to={profile.contacts.twitter}>twitter</NavLink>\r\n                            )}\r\n                            {profile.contacts.instagram && (\r\n                                <NavLink to={profile.contacts.instagram}>instagram</NavLink>\r\n                            )}\r\n                            {profile.contacts.youtube && (\r\n                                <NavLink to={profile.contacts.youtube}>youtube</NavLink>\r\n                            )}\r\n                            {profile.contacts.github && (\r\n                                <NavLink to={profile.contacts.github}>github</NavLink>\r\n                            )}\r\n                            {profile.contacts.mainLink && (\r\n                                <NavLink to={profile.contacts.mainLink}>mainLink</NavLink>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import * as Yup from \"yup\";\r\n\r\nconst postFormSchema = Yup.object().shape({\r\n    newPostText: Yup.string()\r\n        .min(2, \"Must be longer than 2 characters\")\r\n        .max(100, \"Must be shorter than 100 characters\")\r\n        .required(\"Required\")\r\n    });\r\n\r\nexport default postFormSchema;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__7hfib\",\"textarea\":\"MyPosts_textarea__l32Cp\",\"posts\":\"MyPosts_posts__ivALQ\",\"error\":\"MyPosts_error__txC3s\",\"errorTextarea\":\"MyPosts_errorTextarea__HB9Lt\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__w07l4\",\"like\":\"Post_like__j2aSZ\"};","import React from \"react\";\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.post}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6GiWyv4yUzOhaPY4U_qqmI6BfuzrnLtOQMA&s\" />\r\n            {props.message}\r\n            <div className={classes.like}>\r\n                <span><img src=\"https://uxwing.com/wp-content/themes/uxwing/download/brands-and-social-media/blue-like-button-icon.png\" alt=\"\" />{props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, { PureComponent } from \"react\";\r\nimport { Field, Form, Formik, ErrorMessage } from \"formik\";\r\nimport postFormSchema from \"../../FormValidation/PostFormSchema\";\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let messageElements = \r\n    [...props.postData]\r\n    .reverse()\r\n    .map(post => <Post message={post.message} key={post.id} likes={post.likesCount} />);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost} />\r\n            <div className={classes.posts}>\r\n                {messageElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ newPostText: '' }}\r\n            onSubmit={(values, { resetForm }) => {\r\n                props.onSubmit(values);\r\n                resetForm();\r\n            }}\r\n            validationSchema={postFormSchema}>\r\n            {({ errors, touched }) => (\r\n                <Form>\r\n                    <div>\r\n                        <Field\r\n                            name=\"newPostText\"\r\n                            as=\"textarea\"\r\n                            placeholder=\"Enter text\"\r\n                            className={`${classes.textarea} ${errors.newPostText && touched.newPostText ? classes.errorTextarea : ''}`}\r\n                        />\r\n                        <ErrorMessage name=\"newPostText\" component=\"div\" className={classes.error} />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">Add post</button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profileReducer'\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, { useEffect } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/profileReducer\";\r\nimport { useParams, } from 'react-router-dom';\r\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst ProfileContainer = (props) => {\r\n    const { userId } = useParams();\r\n\r\n    useEffect(() => {\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        props.getUserProfile(userId)\r\n        props.getStatus(userId)\r\n    }, [userId]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Profile {...props} profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus })\r\n)(ProfileContainer)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from 'react-router-dom'; \r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) { \r\n                return <Navigate to={'/login'} />;\r\n            }\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return connectedAuthRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","autoFocus","onBlur","deactivateEditMode","updateStatus","onChange","e","currentTarget","value","_ref","profile","src","alt","className","classes","photos","large","loginIMG","fullName","aboutMe","Object","values","contacts","some","contact","_Fragment","facebook","NavLink","to","website","vk","twitter","instagram","youtube","github","mainLink","ProfileStatusWithHooks","Preloader","Yup","shape","newPostText","min","max","required","message","likes","MyPosts","React","messageElements","postData","reverse","map","post","Post","likesCount","id","AddNewPostForm","onSubmit","addPost","Formik","initialValues","resetForm","validationSchema","postFormSchema","_ref2","errors","touched","Form","Field","name","as","placeholder","ErrorMessage","component","type","connect","state","profilePage","dispatch","addPostActionCreator","ProfileInfo","MyPostsContainer","compose","authorizedUserId","auth","userId","isAuth","getUserProfile","getStatus","useParams","Profile","mapStateToPropsForRedirect","Component","RedirectComponent","render","this","Navigate"],"sourceRoot":""}