{"version":3,"file":"static/js/781.a77b1a35.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Messages/Messages.module.css?8e7e","components/Messages/DialogItem/DialogItem.jsx","components/Messages/Message/Message.jsx","components/FormValidation/MessageFormSchema.js","components/Messages/AddMessageForm.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Messages_dialogs__hIS3b\",\"dialogsItems\":\"Messages_dialogsItems__ttuLo\",\"active\":\"Messages_active__WuTjs\",\"dialog\":\"Messages_dialog__tgrSR\",\"messages\":\"Messages_messages__VAR0S\",\"message\":\"Messages_message__ftMhL\",\"textarea\":\"Messages_textarea__sY7J6\",\"error\":\"Messages_error__nW-m-\",\"errorTextarea\":\"Messages_errorTextarea__kPf-+\"};","import React from \"react\";\r\nimport classes from './../Messages.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/messages/' + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img src={props.img} />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from './../Messages.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            <img src={props.img}/>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import * as Yup from \"yup\";\r\n\r\nconst messageFormSchema = Yup.object().shape({\r\n    newMessageText: Yup.string()\r\n        .min(2, \"Must be longer than 2 characters\")\r\n        .max(100, \"Must be shorter than 100 characters\")\r\n        .required(\"Required\")\r\n});\r\n\r\nexport default messageFormSchema;\r\n","import { Field, Form, Formik, ErrorMessage } from \"formik\";\r\nimport messageFormSchema from \"../FormValidation/MessageFormSchema\";\r\nimport classes from './Messages.module.css';\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ newMessageText: '' }}\r\n            onSubmit={(values, { resetForm }) => {\r\n                props.onSubmit(values);\r\n                resetForm();\r\n            }}\r\n            validationSchema={messageFormSchema}\r\n        >\r\n            {({ errors, touched }) => (\r\n                <Form>\r\n                    <div>\r\n                        <Field\r\n                            name=\"newMessageText\"\r\n                            component='textarea'\r\n                            placeholder=\"Enter text\"\r\n                            className={`${classes.textarea} ${errors.newMessageText && touched.newMessageText ? classes.errorTextarea : ''}`}\r\n                        />\r\n                        <ErrorMessage name=\"newMessageText\" component=\"div\" className={classes.error} />\r\n                    </div>\r\n                    <button type=\"submit\">Send</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default AddMessageForm","import React from \"react\";\r\nimport classes from './Messages.module.css';\r\nimport { Navigate } from 'react-router-dom';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm\";\r\n\r\nconst Messages = (props) => {\r\n    let dialogsElements = props.messagesPage.dialogsData.map(dialog =>\r\n        <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} img={dialog.img} />\r\n    );\r\n    let messagesElements = props.messagesPage.messagesData.map(message =>\r\n        <Message message={message.message} key={message.id} img={message.img} />\r\n    );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    };\r\n\r\n    if (!props.isAuth) {\r\n        return <Navigate to={'/login'} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n                <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport { sendMessageActionCreator } from '../../redux/messagesReducer'\r\nimport { connect } from \"react-redux\";\r\nimport Messages from './Messages'\r\nimport withAuthRedirect from \"../../hoc/WithAuthRedirect.js\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageActionCreator(newMessageText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messages);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from 'react-router-dom'; \r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) { \r\n                return <Navigate to={'/login'} />;\r\n            }\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return connectedAuthRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;\r\n"],"names":["props","path","id","_jsxs","className","classes","children","_jsx","src","img","NavLink","to","name","message","Yup","shape","newMessageText","min","max","required","Formik","initialValues","onSubmit","values","_ref","resetForm","validationSchema","messageFormSchema","_ref2","errors","touched","Form","Field","component","placeholder","ErrorMessage","type","dialogsElements","messagesPage","dialogsData","map","dialog","DialogItem","messagesElements","messagesData","Message","isAuth","AddMessageForm","sendMessage","Navigate","compose","connect","state","dispatch","sendMessageActionCreator","withAuthRedirect","Messages","mapStateToPropsForRedirect","auth","Component","RedirectComponent","React","render","this"],"sourceRoot":""}